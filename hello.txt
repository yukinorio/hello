import json
import struct
from pygltflib import GLTF2
from geojson import Point, Feature, FeatureCollection

def glb_to_geojson(input_glb, output_geojson):
    gltf = GLTF2().load(input_glb)

    features = []
    for accessor_idx, accessor in enumerate(gltf.accessors):
        if accessor.type == "VEC3" and accessor.componentType == 5126 and accessor.bufferView is not None:  # VEC3 and type Float32
            buffer_view = gltf.bufferViews[accessor.bufferView]
            buffer = gltf.buffers[buffer_view.buffer]

            coords = []
            for i in range(accessor.count):
                byte_offset = buffer_view.byteOffset + accessor.byteOffset + (i * accessor.byteStride)
                coord = struct.unpack_from('<fff', buffer.data, byte_offset)
                coords.append(coord)

            for coord in coords:
                point = Point((coord[0], coord[1], coord[2]))
                feature = Feature(geometry=point)
                features.append(feature)

    feature_collection = FeatureCollection(features)

    with open(output_geojson, "w") as f:
        f.write(json.dumps(feature_collection))

# Replace the paths with the actual file paths
input_glb = 'path/to/your/glb/file.glb'
output_geojson = 'path/to/output/geojson/file.geojson'

glb_to_geojson(input_glb, output_geojson)



from pygltflib import GLTF2

def explore_glb(input_glb):
    gltf = GLTF2().load(input_glb)

    print("Accessors:")
    for i, accessor in enumerate(gltf.accessors):
        print(f"  Accessor {i}: Type: {accessor.type}, ComponentType: {accessor.componentType}, BufferView: {accessor.bufferView}")

    print("\nBuffer Views:")
    for i, buffer_view in enumerate(gltf.bufferViews):
        print(f"  BufferView {i}: Buffer: {buffer_view.buffer}, ByteOffset: {buffer_view.byteOffset}, ByteLength: {buffer_view.byteLength}")

    print("\nBuffers:")
    for i, buffer in enumerate(gltf.buffers):
        print(f"  Buffer {i}: ByteLength: {buffer.byteLength}")

input_glb = 'path/to/your/glb/file.glb'
explore_glb(input_glb)



<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <title>3D Tiles</title>
  <script src="https://cesium.com/downloads/cesiumjs/releases/1.94/Build/Cesium/Cesium.js"></script>
  <link href="https://cesium.com/downloads/cesiumjs/releases/1.94/Build/Cesium/Widgets/widgets.css" rel="stylesheet">
  <style>
    html, body, #cesiumContainer {
      width: 100%; height: 100%; margin: 0; padding: 0; overflow: hidden;
    }
  </style>
</head>
<body>
  <div id="cesiumContainer"></div>
  <script>
    // CesiumJSコードはここに入ります
  </script>
</body>
</html>



{
  "asset": {
    "version": "1.0"
  },
  "geometricError": 500,
  "root": {
    "boundingVolume": {
      "region": [
        0.00131972096076574,
        0.698295389460957,
        0.00132494709079788,
        0.698299770033402,
        0,
        100
      ]
    },
    "geometricError": 500,
    "refine": "ADD",
    "content": {
      "uri": "your-b3dm-file.b3dm"
    },
    "transform": [
      1, 0, 0, 0,
      0, 1, 0, 0,
      0, 0, 1, 0,
      0, 0, 0, 1
    ]
  }
}
